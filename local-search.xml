<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Arduino Flowing Light</title>
    <link href="/2023/10/26/FlowingLight/"/>
    <url>/2023/10/26/FlowingLight/</url>
    
    <content type="html"><![CDATA[<h1 id="Arduino-Flowing-Light-Demonstration"><a href="#Arduino-Flowing-Light-Demonstration" class="headerlink" title="Arduino Flowing Light Demonstration"></a>Arduino Flowing Light Demonstration</h1><h2 id="Hardware-equipment"><a href="#Hardware-equipment" class="headerlink" title="Hardware equipment"></a>Hardware equipment</h2><p>arduino uno,led<em>10,220 ohm resistor</em>10,several DuPont wires</p><h2 id="Circuit-connection"><a href="#Circuit-connection" class="headerlink" title="Circuit connection:"></a>Circuit connection:</h2><p> The circuit connection is shown in the figure:</p><p><img src="/img/Arduino1/line.png"></p><h2 id="Code-display"><a href="#Code-display" class="headerlink" title="Code display:"></a>Code display:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">The code <span class="hljs-keyword">for</span> flowing light is as follows:<br><br>int a,b,i;<br>void <span class="hljs-function"><span class="hljs-title">setup</span></span>() <br>&#123;                <br><span class="hljs-keyword">for</span>(i=3;i&lt;=12;i++)<br>  pinMode(i, OUTPUT);//Declare 10 LED lights as outputs<br>&#125;<br>void <span class="hljs-function"><span class="hljs-title">loop</span></span>() <br>&#123;<br>  <span class="hljs-keyword">for</span>(a=3;a&lt;=12;a++)<br>  &#123;<br>  digitalWrite(a, HIGH);  <br>  delay(50);<br>  digitalWrite(a, LOW);  <br>  delay(50);<br>  &#125;<br>  // Forward flow<br>  <span class="hljs-keyword">for</span>(b=12;b&gt;=3;b--)<br>  &#123;<br>  digitalWrite(b, HIGH); <br>  delay(50);<br>  digitalWrite(b, LOW);  <br>  delay(50);<br>  &#125;//Reverse flow<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Physical-display"><a href="#Physical-display" class="headerlink" title="Physical display"></a>Physical display</h2><p><img src="/img/Arduino1/show.gif"></p><p><img src="/img/Arduino1/light1.jpg"></p><p><img src="/img/Arduino1/light2.jpg"></p><p><img src="/img/Arduino1/light3.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>Arduino</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>FinalPro-Market</title>
    <link href="/2023/10/23/Market/"/>
    <url>/2023/10/23/Market/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Final Project</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>FinalPro-Innovation</title>
    <link href="/2023/10/23/Innovation/"/>
    <url>/2023/10/23/Innovation/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Final Project</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>FinalPro-How to make</title>
    <link href="/2023/10/23/make/"/>
    <url>/2023/10/23/make/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Final Project</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>FinalPro-Topic</title>
    <link href="/2023/10/23/Topic/"/>
    <url>/2023/10/23/Topic/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Final Project</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CADDesign</title>
    <link href="/2023/10/16/CADDesign/"/>
    <url>/2023/10/16/CADDesign/</url>
    
    <content type="html"><![CDATA[<h1 id="Overview-of-Works"><a href="#Overview-of-Works" class="headerlink" title="Overview of Works"></a>Overview of Works</h1><h2 id="Simulation-of-Tangential-Motion-in-Disc-type-Cam-Structures"><a href="#Simulation-of-Tangential-Motion-in-Disc-type-Cam-Structures" class="headerlink" title="Simulation of Tangential Motion in Disc-type Cam Structures"></a>Simulation of Tangential Motion in Disc-type Cam Structures</h2><p>Motion Effect<br><img src="/img/CAD/gif.gif"><br>Component Engineering Drawing<br><img src="/img/CAD/figure.jpg"></p><h2 id="Pendulum-motion-simulation"><a href="#Pendulum-motion-simulation" class="headerlink" title="Pendulum motion simulation"></a>Pendulum motion simulation</h2><p>Motion Effect<br><img src="/img/CAD/mcy1.gif"><br>Timeline Process<br><img src="/img/CAD/mcy2.gif"></p><h2 id="Motion-Simulation-of-Four-bar-Mechanism"><a href="#Motion-Simulation-of-Four-bar-Mechanism" class="headerlink" title="Motion Simulation of Four-bar Mechanism"></a>Motion Simulation of Four-bar Mechanism</h2><p><img src="/img/CAD/zy.gif"></p><h2 id="Motion-Simulation-of-Cam-Mechanisms"><a href="#Motion-Simulation-of-Cam-Mechanisms" class="headerlink" title="Motion Simulation of Cam Mechanisms"></a>Motion Simulation of Cam Mechanisms</h2><p><img src="/img/CAD/gzk.gif"></p><h2 id="Schmidt-Coupling"><a href="#Schmidt-Coupling" class="headerlink" title="Schmidt Coupling"></a>Schmidt Coupling</h2><p><img src="/img/CAD/lhc.gif"><br><img src="/img/CAD/l8.png"></p><h1 id="Simulation-Modeling-Process-of-Tangential-Motion-of-Disc-Cam-Structure"><a href="#Simulation-Modeling-Process-of-Tangential-Motion-of-Disc-Cam-Structure" class="headerlink" title="Simulation Modeling Process of Tangential Motion of Disc Cam Structure"></a>Simulation Modeling Process of Tangential Motion of Disc Cam Structure</h1><p>1.Draw a circle with a diameter of 30mm and its center at the origin.<br>2.Set a circle with a diameter of 3<em>d1+0.1 and 3</em>d1+12.1 above the y-axis origin.<br>3.Stretch the set circle to a distance of 1&#x2F;6<em>d1 from the ring.<br><img src="/img/CAD/1.png"><br>4.Set a rectangle with a width of 1&#x2F;6</em>d1 and a height of 57mm on the plane, and symmetry the rectangle on the y-axis.<br>5.Arrange three of these rectangles in a circular distribution with the origin as the center point.<br>6.Stretch these three rectangles by a distance of 1&#x2F;6<em>d1 and merge them with the cylinder.<br><img src="/img/CAD/2.png"><br>7.Return to the plane with the origin as the center and set up a circle with a diameter of 2&#x2F;3</em>d1.<br>8.Stretch the circle by a distance of 5&#x2F;6<em>d1.<br><img src="/img/CAD/3.png"><br>9.Set a groove on the y-axis and stretch it on both sides.<br>10.Place a rectangle along the left edge of the groove and the center of the upper circle.<br>11.Set a circle with a diameter of 1&#x2F;6</em>d1 centered at the lower circle’s center and another circle with a diameter of 2&#x2F;5<em>d1.<br>12.Place circles with diameters of 2&#x2F;5</em>d1 and 1&#x2F;6<em>d1 above the center of the lower circle in the groove.<br>13.Stretch the set rectangle by 50mm.<br><img src="/img/CAD/4.png"><br>14.Stretch the two set small circles to create holes and then create a new component.<br>15.Stretch the two new cylindrical components by -7&#x2F;30</em>d1.<br>16.Stretch the two large circles by 7&#x2F;30<em>d1.<br><img src="/img/CAD/5.png"><br>17.Set a rectangle at the top of the groove, proportionate to the outer edge and centered, and then stretch it on both sides.<br><img src="/img/CAD/6.png"><br>18.Stretch the ring of circles outside the original circle by 2&#x2F;3</em>d1.<br><img src="/img/CAD/7.png"><br>19.Create a custom shape in the yz-plane and symmetrically stretch it by 1&#x2F;6*d1 .<br>20.Merge the generated shape with the rectangular body and the annular body, then set it as a rigid group.<br><img src="/img/CAD/8.png"><br>21.Set the “Mercedes logo-like” shape to rotate around the z-axis joint.<br><img src="/img/CAD/9.png"><br>22.Set the two small cylinders to have a rotational joint.<br><img src="/img/CAD/10.png"><br>23.Set the groove to have a sliding joint along the z-axis.<br><img src="/img/CAD/11.png"><br>24.Establish a tangential relationship between the upper small cylinder and the ring.<br><img src="/img/CAD/12.png"><br>25.Final GIF presentation.<br><img src="/img/CAD/gif.gif"></p><h1 id="Schmidt-Coupling-Modeling-Process"><a href="#Schmidt-Coupling-Modeling-Process" class="headerlink" title="Schmidt Coupling Modeling Process"></a>Schmidt Coupling Modeling Process</h1><p>The design for this project is a simplified structure of a Schmidt coupling. Below are the specific modeling steps:</p><p>1.First, create a sketch of three main axes, and select the top view as the sketch plane. Use a circular array to obtain all three sides as shown in the sketch below:<br><img src="/img/CAD/l1.png"><br>2.Extend the sketch of the main axes, and repeat the previous steps as shown in the following diagram. In the end, you will have three main axes as depicted in the image:<br><img src="/img/CAD/l2.png"><br>3.Draw a sketch for the connecting shaft as shown in the image.<br><img src="/img/CAD/l3.png"><br>4.After extending the connecting shaft, perform a move&#x2F;copy operation to obtain the desired quantity of connecting shafts as shown in the image:<br><img src="/img/CAD/l4.png"><br>5.Select a palne on the main axis to create a sketch, then establish a secondary connecting shaft as shown in the image:<br><img src="/img/CAD/l5.png"><br>6.After repeating the above operations, you will obtain the required components as shown in the image:<br><img src="/img/CAD/l6.png"><br>7.Once you’ve converted the entities into components, assemble the various parts by selecting the center and the plane, then choose a rotational motion as shown in the image:<br><img src="/img/CAD/l7.png"><br>8.Repeat the above steps to connect all the shafts and secure the base. The assembly is now complete.<br><img src="/img/CAD/l8.png"></p><h1 id="Introduction-to-other-modeling-software"><a href="#Introduction-to-other-modeling-software" class="headerlink" title="Introduction to other modeling software."></a>Introduction to other modeling software.</h1><h2 id="Blender"><a href="#Blender" class="headerlink" title="Blender"></a>Blender</h2><p><img src="/img/CAD/blender.jpg"><br>Blender is a free and open-source 3D computer graphics software used for creating, rendering, and animating 3D content. It offers a wide range of features, including 3D modeling, material and texture creation, rendering, animation, compositing, layout, and more, making it widely used in various fields such as film production, game development, architectural visualization, scientific visualization, virtual reality, and more.</p><p>Here are some key features and functions of Blender:<br>3D Modeling: Blender allows users to create various 3D models, including geometries, characters, buildings, landscapes, and more. It provides multiple modeling tools, such as polygon modeling, subsurface subdivision modeling, and sculpting tools, enabling users to precisely shape their models.</p><p>Materials and Textures: Users can create materials for their models and then add textures and maps to enhance the appearance and texture of the models.</p><p>Rendering: Blender includes a powerful rendering engine for generating realistic images and animations. It supports ray tracing, real-time rendering, and various rendering effects.</p><p>Animation: Blender allows users to create animations for objects, including keyframe animation, skeletal animation, and physics simulations, making it an ideal tool for producing animated films and games.</p><p>Compositing and Special Effects: Users can perform video compositing and add special effects within Blender, making it a top-notch tool for video post-processing.</p><p>Layout and Design: Blender also features a set of layout tools for creating graphic design, animated titles, interfaces, and interactive content.</p><p>Scripting and Plugin Support: Blender is extensible, and users can write custom tools and plugins using Python scripting to meet their specific needs.</p><p>Free and Open Source: Blender is free to download and use. It is also open-source software, allowing users to view and modify its source code.</p><p>Blender’s user interface may be a bit steep for beginners, but it has a strong community and numerous online tutorials and resources to help users get started. Whether you are an artist, designer, game developer, or animator, Blender is a powerful tool to help you realize various 3D creative projects.</p><h2 id="ZBrush"><a href="#ZBrush" class="headerlink" title="ZBrush"></a>ZBrush</h2><p><img src="/img/CAD/zbrush.jpg"><br>ZBrush is a professional digital sculpting and 3D modeling software developed by Pixologic. It is widely used in the fields of digital art, 3D modeling, character design, and sculpting to create highly detailed 3D models. Here are some key features and functions of ZBrush:</p><p>Digital Sculpting: One of the primary functions of ZBrush is digital sculpting, allowing artists to paint and sculpt on 3D models using fine brushes and tools. This enables users to create highly complex and detailed models, including characters, creatures, environments, and more.</p><p>High-Resolution Models: ZBrush supports very high model resolutions, which means users can add minute details such as textures, wrinkles, skin textures, etc., without losing detail.</p><p>Polygon and Subdivision Modeling: Users can create basic polygon models and then refine them with subdivision surfaces to add more detail. This workflow allows artists to make fine modifications to the model.</p><p>ZBrush Brush System: ZBrush has an extensive brush library, including standard brushes, array brushes, deform brushes, and more, allowing artists to achieve various effects and textures.</p><p>Polygon Painting and Sculpting: ZBrush allows users to paint polygons directly on the model without the need for manual topology drawing, making model creation and modification more flexible.</p><p>Facial Modeling and Character Design: ZBrush is powerful for creating character models and facial expressions, suitable for digital character design and animation production.</p><p>Real-Time Preview and Rendering: Users can perform real-time rendering in ZBrush to see how the model looks under different lighting conditions, enhancing their understanding of the final appearance.</p><p>ZRemesher and Polygon Retopology: ZBrush provides automatic retopology tools to help users generate clean polygon topology for subsequent modeling and animation.</p><p>Plugin Support: ZBrush supports plugins to extend its functionality, adding extra tools and effects.</p><p>ZBrush is a preferred tool for digital artists, game developers, visual effects professionals, and modelers, as it offers excellent sculpting and modeling tools to create high-quality 3D models and characters. While ZBrush may have a learning curve for beginners, it excels in creating complex digital art and 3D models.</p>]]></content>
    
    
    <categories>
      
      <category>CAD</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>WebPageBuild</title>
    <link href="/2023/10/16/WebPageBuild/"/>
    <url>/2023/10/16/WebPageBuild/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Install-Node-js"><a href="#1-Install-Node-js" class="headerlink" title="1.Install Node.js"></a>1.Install Node.js</h1><p>Double-click the installation package to install.<br><img src="/img/webpage/node.png"></p><h1 id="2-Create-GitHub-Page"><a href="#2-Create-GitHub-Page" class="headerlink" title="2.Create GitHub Page"></a>2.Create GitHub Page</h1><p>Create a new repository, the repository name should match the username. Format: name.github.io.</p><p>The “name” needs to match your username on xxx.github.com, or else you won’t be able to access name.github.io properly.<br><img src="/img/webpage/1.png"><br>Access the repository’s Settings, go to Pages, turn on the page switch, and select the “main” branch.<br><img src="/img/webpage/2.png"></p><h1 id="3-Group-Collaboration"><a href="#3-Group-Collaboration" class="headerlink" title="3.Group Collaboration"></a>3.Group Collaboration</h1><p>Add team members to the repository to collaborate on project management.<br><img src="/img/webpage/collaborator.png"></p><h1 id="4-Run-Git"><a href="#4-Run-Git" class="headerlink" title="4.Run Git"></a>4.Run Git</h1><p>Install GitHub Desktop by double-clicking on the installation package.<br><img src="/img/webpage/gitDesktop.png"><br>After a successful installation, log in to your GitHub account and then pull the corresponding repository.<br><img src="/img/webpage/gitDesktop2.png"><br>Edit the repository files in VScode, save your changes, and then push the modified content back to the repository.<br><img src="/img/webpage/gitDesktop3.png"></p><h1 id="5-Install-Hexo"><a href="#5-Install-Hexo" class="headerlink" title="5.Install Hexo"></a>5.Install Hexo</h1><p>Enter the following in the command line:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli <br></code></pre></td></tr></table></figure><h2 id="Initialize-the-Hexo-project"><a href="#Initialize-the-Hexo-project" class="headerlink" title="Initialize the Hexo project."></a>Initialize the Hexo project.</h2><p>The Hexo project will automatically create all the necessary files for your website in the target folder. Make sure to enter the command in an empty folder:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><p>After a successful initialization, files will be automatically generated in the folder.<br><img src="/img/webpage/hexoFolders.png"><br>Install the dependency packages:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install<br></code></pre></td></tr></table></figure><h2 id="Locally-view-the-Hexo-service"><a href="#Locally-view-the-Hexo-service" class="headerlink" title="Locally view the Hexo service:"></a>Locally view the Hexo service:</h2><p>Generate static files:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo generate<br>or<br>hexo g<br></code></pre></td></tr></table></figure><p>Start the local server:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br>or<br>hexo s<br></code></pre></td></tr></table></figure><p>Afterward, access <a href="http://localhost:4000/">http://localhost:4000</a> in your web browser for local preview.<br><img src="/img/webpage/3.png"></p><h1 id="6-Install-the-Fluid-theme"><a href="#6-Install-the-Fluid-theme" class="headerlink" title="6.Install the Fluid theme"></a>6.Install the Fluid theme</h1><p>Enter the Hexo directory and execute the command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><h2 id="Specify-the-theme"><a href="#Specify-the-theme" class="headerlink" title="Specify the theme"></a>Specify the theme</h2><p>Modify the configuration file to set the website theme to “fluid.”</p><p>Make the following modifications in the <code>_config.yml</code> file within your Hexo directory:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">theme: fluid  <span class="hljs-comment"># Specify the theme</span><br>language: en  <span class="hljs-comment"># Specify the language, which can affect the language displayed in the theme. Modify it as needed.</span><br></code></pre></td></tr></table></figure><p>After making the modifications, access local preview to see that the website theme has been successfully changed.<br><img src="/img/webpage/homepage2.png"></p><h1 id="7-Create-document-pages"><a href="#7-Create-document-pages" class="headerlink" title="7.Create document pages"></a>7.Create document pages</h1><h2 id="Create「About-Page」"><a href="#Create「About-Page」" class="headerlink" title="Create「About Page」"></a>Create「About Page」</h2><p>Enter the following command in the command line:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></table></figure><p>After successfully creating it, modify <code>/source/about/index.md</code> and add the <code>layout</code> property.</p><p>Afterward, update the relevant content on the About Page, supporting Markdown and HTML.</p><h2 id="Create-a-new-article-page"><a href="#Create-a-new-article-page" class="headerlink" title="Create a new article page"></a>Create a new article page</h2><p>Enter the following command in the command line:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new pagename<br></code></pre></td></tr></table></figure><p>The “pagename” is the title of the new page, and the page will be automatically created.</p><p>After successfully creating it, you can find the corresponding <code>.md</code> document in the <code>/source/_posts directory</code>. Click to edit the content, supporting Markdown and HTML.</p><h2 id="Add-images-to-the-page"><a href="#Add-images-to-the-page" class="headerlink" title="Add images to the page"></a>Add images to the page</h2><p>Import the images into the <code>/source/img</code> folder.<br><img src="/img/webpage/source.png"><br>Edit the article content and insert images.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">![](/img/clock.png)<br></code></pre></td></tr></table></figure><h2 id="Home-Page"><a href="#Home-Page" class="headerlink" title="Home Page"></a>Home Page</h2><p>Modify the homepage content in the <code>_config.fluid.yml</code> file.</p><p>Change the homepage title.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">navbar:<br>  blog_title: <span class="hljs-string">&quot;10:36 Team&quot;</span><br></code></pre></td></tr></table></figure><p>Edit the homepage typewriter text.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">slogan:<br>  <span class="hljs-built_in">enable</span>: <span class="hljs-literal">true</span><br>  text: <span class="hljs-string">&quot;Hello! Welcome to the page of 10:36 Team!&quot;</span><br></code></pre></td></tr></table></figure><p>Change the site favicon.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Icon for browser tab</span><br>favicon: /img/clock1.png<br><br><span class="hljs-comment"># Icon for Apple touch</span><br>apple_touch_icon: /img/clock1.png<br></code></pre></td></tr></table></figure><p>Edit the menu bar content.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">menu:<br>    - &#123; key: <span class="hljs-string">&quot;home&quot;</span>, <span class="hljs-built_in">link</span>: <span class="hljs-string">&quot;/&quot;</span>, icon: <span class="hljs-string">&quot;iconfont icon-home-fill&quot;</span>&#125;<br>    - &#123; key: <span class="hljs-string">&quot;archive&quot;</span>, <span class="hljs-built_in">link</span>: <span class="hljs-string">&quot;/archives/&quot;</span>, icon: <span class="hljs-string">&quot;iconfont icon-archive-fill&quot;</span> &#125;<br>    - &#123; key: <span class="hljs-string">&quot;category&quot;</span>, <span class="hljs-built_in">link</span>: <span class="hljs-string">&quot;/categories/&quot;</span>, icon: <span class="hljs-string">&quot;iconfont icon-category-fill&quot;</span>&#125;<br>    - &#123; key: <span class="hljs-string">&quot;about&quot;</span>, <span class="hljs-built_in">link</span>: <span class="hljs-string">&quot;/about/&quot;</span>, icon: <span class="hljs-string">&quot;iconfont icon-user-fill&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>Navigation bar menu. <code>key</code> is used to associate languages&#x2F;*.yml. If there is no association, the value of <code>key</code> itself will be displayed; if <code>icon</code> is a css class, it can be omitted; adding <code>name</code> can force the display of the specified name</p><h1 id="8-Deployment"><a href="#8-Deployment" class="headerlink" title="8.Deployment"></a>8.Deployment</h1><p>Add deployment configuration in the <code>_config.yml</code> file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: git@github.com:mengcye/mengcye.github.io.git <span class="hljs-comment">#GitHub repository address for deployment.</span><br>  branch: main<br></code></pre></td></tr></table></figure><p>Before each deployment, it’s necessary to clear the existing static files, generate new static files, and then proceed with the deployment.</p><p>Execute the following commands in sequence:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Clear the current static files.</span><br>hexo clean<br>or <br>hexo cl<br><br><span class="hljs-comment">#Generate static files.</span><br>hexo generate<br>or<br>hexo g<br><br><span class="hljs-comment">#Deploy</span><br>hexo deploy<br>or <br>hexo g<br></code></pre></td></tr></table></figure><p>After a successful deployment, visit the corresponding GitHub Pages URL to view our website.</p><h1 id="9-The-final-homepage-display"><a href="#9-The-final-homepage-display" class="headerlink" title="9.The final homepage display"></a>9.The final homepage display</h1><p><img src="/img/webpage/homepage3.png"><br><img src="/img/webpage/homepage4.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://blog.csdn.net/sedbz/article/details/126032526">https://blog.csdn.net/sedbz/article/details/126032526</a></p><p><a href="https://hexo.fluid-dev.com/docs/start/#%E4%B8%BB%E9%A2%98%E7%AE%80%E4%BB%8B">https://hexo.fluid-dev.com/docs/start/#%E4%B8%BB%E9%A2%98%E7%AE%80%E4%BB%8B</a></p><p><a href="https://blog.csdn.net/qq_36580022/article/details/127964463">https://blog.csdn.net/qq_36580022/article/details/127964463</a></p>]]></content>
    
    
    <categories>
      
      <category>WebPage</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/10/16/hello-world/"/>
    <url>/2023/10/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
